[tox]
envlist = pep8,py3
# NOTE: Avoid build/test env pollution by not enabling sitepackages.
sitepackages = False
# NOTE: Avoid false positives by not skipping missing interpreters.
skip_missing_interpreters = False

[testenv]
skip_install = True
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         TERM=linux
         CHARM_LAYERS_DIR={toxinidir}/layers
         CHARM_INTERFACES_DIR={toxinidir}/interfaces
         JUJU_REPOSITORY={toxinidir}/build
passenv =
    no_proxy
    http_proxy
    https_proxy
    CHARM_INTERFACES_DIR
    CHARM_LAYERS_DIR
    JUJU_REPOSITORY
    OS_*
    TEST_*
allowlist_externals =
    charmcraft
    bash
    tox
    {toxinidir}/rename.sh
deps =
    -r{toxinidir}/requirements.txt

[testenv:build]
basepython = python3
# charmcraft clean is done to ensure that
# `tox -e build` always performs a clean, repeatable build.
# For faster rebuilds during development,
# directly run `charmcraft -v pack && ./rename.sh`.
commands =
    charmcraft clean
    charmcraft -v pack
    {toxinidir}/rename.sh
    charmcraft clean

[testenv:build-reactive]
basepython = python3
commands =
    charm-build --log-level DEBUG --use-lock-file-branches -o {toxinidir}/build/builds src {posargs}

[testenv:add-build-lock-file]
basepython = python3
commands =
    charm-build --log-level DEBUG --write-lock-file -o {toxinidir}/build/builds src {posargs}

[testenv:py3]
basepython = python3
deps = -r{toxinidir}/test-requirements.txt
commands = stestr run --slowest {posargs}

[testenv:py38]
basepython = python3.8
deps = -r{toxinidir}/test-requirements.txt
commands = stestr run --slowest {posargs}

[testenv:py310]
basepython = python3.10
deps = -r{toxinidir}/test-requirements.txt
commands = stestr run --slowest {posargs}

[testenv:py311]
basepython = python3.11
deps = -r{toxinidir}/test-requirements.txt
commands = stestr run --slowest {posargs}

[testenv:pep8]
basepython = python3
deps = flake8
       charm-tools
commands = flake8 {posargs} src unit_tests

[testenv:func-target]
basepython = python3
changedir = {toxinidir}/src
deps =
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/src/test-requirements.txt
commands = functest-run-suite --keep-model --bundle {posargs}

[testenv:cover]
# Technique based heavily upon
# https://github.com/openstack/nova/blob/master/tox.ini
basepython = python3
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
setenv =
    {[testenv]setenv}
    PYTHON=coverage run
commands =
    coverage erase
    stestr run --slowest {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[coverage:run]
branch = True
concurrency = multiprocessing
parallel = True
source =
    .
omit =
    .tox/*
    */charmhelpers/*
    unit_tests/*

[testenv:venv]
basepython = python3
commands = {posargs}

[flake8]
# E402 ignore necessary for path append before sys module import in actions
ignore = E402,W503,W504
